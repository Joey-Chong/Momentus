{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/CSC648/Group Project/CSC648GroupProject/front_end/momentus/src/App.js\";\nimport React, { Component } from 'react'; //import ReactDOM from 'react-dom';\n\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom'; // import './App.css';\n\nimport Stream from './pages/stream';\nimport About from './pages/about';\nimport Messages from './pages/messages';\nimport Notifs from './pages/notifs';\nimport Settings from './pages/settings';\nimport Search from './pages/search';\nimport Login from './pages/login';\nimport Register from './pages/register';\nimport NavigationBar from './components/NavigationBar';\nimport SideBar from './components/SideBar';\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(rootReducer);\n/* \nGrabs states and their default values needed.\nGet whether user is logged in, and if so their name and id. \n*/\n\nconst select = appState => ({\n  isLoggedIn: appState.loginReducer.isLoggedIn,\n  username: appState.loginReducer.username,\n  _id: appState.loginReducer._id\n});\n/*\nTODO: Dynamically change what is displayed based on whether\nthe user is logged in (i.e. show the landing page if not logged in)\nBut for now we will assume the user is logged in\n*/\n\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n        children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n          children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Stream, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/about\",\n              children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/messages\",\n              children: /*#__PURE__*/_jsxDEV(Messages, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/notifs\",\n              children: /*#__PURE__*/_jsxDEV(Notifs, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/settings\",\n              children: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/search\",\n              children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/register\",\n              children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matt/Documents/CSC648/Group Project/CSC648GroupProject/front_end/momentus/src/App.js"],"names":["React","Component","BrowserRouter","Link","Route","Switch","Stream","About","Messages","Notifs","Settings","Search","Login","Register","NavigationBar","SideBar","createStore","applyMiddleware","rootReducer","Provider","useDispatch","connect","store","select","appState","isLoggedIn","loginReducer","username","_id","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//import ReactDOM from 'react-dom';\nimport {BrowserRouter, Link, Route, Switch} from 'react-router-dom';\n// import './App.css';\nimport Stream from './pages/stream';\nimport About from './pages/about';\nimport Messages from './pages/messages';\nimport Notifs from './pages/notifs';\nimport Settings from './pages/settings';\nimport Search from './pages/search';\nimport Login from './pages/login';\nimport Register from './pages/register';\nimport NavigationBar from './components/NavigationBar';\nimport SideBar from './components/SideBar';\nimport { createStore, applyMiddleware, } from \"redux\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport { connect } from 'react-redux';\n\n\nconst store = createStore(rootReducer);\n\n/* \nGrabs states and their default values needed.\nGet whether user is logged in, and if so their name and id. \n*/\nconst select = appState => ({\n  isLoggedIn: appState.loginReducer.isLoggedIn,\n  username: appState.loginReducer.username,\n  _id: appState.loginReducer._id,\n})\n\n/*\nTODO: Dynamically change what is displayed based on whether\nthe user is logged in (i.e. show the landing page if not logged in)\nBut for now we will assume the user is logged in\n*/\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <React.StrictMode>\n          <BrowserRouter>\n          <NavigationBar />\n          <SideBar />\n            <Switch>\n              <Route exact path=\"/\">\n                <Stream />\n              </Route>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/messages\">\n                <Messages />\n              </Route>\n              <Route path=\"/notifs\">\n                <Notifs />\n              </Route>\n              <Route path=\"/settings\">\n                <Settings />\n              </Route>\n              <Route path=\"/search\">\n                <Search />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </React.StrictMode>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}