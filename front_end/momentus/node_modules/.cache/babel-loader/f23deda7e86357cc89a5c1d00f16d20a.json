{"ast":null,"code":"import axios from \"axios\";\n/*\nSome of these may not be needed, and some more may be needed \nThey are modified from my previous 667 project, so any terminology \ndiscrepancies are likely due to that, ask me if clarification is needed - Matt\n*/\n// for verifying if comment was posted\n\nexport const submitCommentSuccess = (comment, post) => {\n  return {\n    type: \"SUBMIT_COMMENT_SUCCESS\",\n    payload: {\n      comment,\n      post\n    }\n  };\n};\nexport const getPostAuthor = () => {\n  return {\n    type: \"GET_POST_AUTHOR\"\n  };\n};\n/* needs modification to backend first before implementing these\nexport const submitComment = (comment, post) => {\n  return (dispatch) => {\n    axios\n      .post(`/api/makeInquiry?listingId=${listing.id}`, { message })\n      .then((res) => {\n        dispatch(submitInquirySuccess(message, listing));\n      });\n  };\n};\n\n\nexport const loadCommentsSuccess = (inquiries) => {\n  return {\n    type: \"LOAD_INQUIRY_SUCCESS\",\n    payload: { inquiries },\n  };\n};\nexport const loadComments = (listing) => {\n  return (dispatch) => {\n    axios.get(`/api/getInquiries?listingId=${listing.id}`).then((res) => {\n      dispatch(loadInquiriesSuccess(res.data.inquiries));\n    });\n  };\n}; */\n\nexport const deletePostSuccess = message => {\n  return {\n    type: \"DELETE_POST_SUCCESS\",\n    payload: {\n      message\n    }\n  };\n}; // TODO: add delete functionality to backend\n\n/* export const deletePost = (post) => {\n  return (dispatch) => {\n    axios.get(`/api/deleteListing?id=${listing.id}`).then((res) => {\n      dispatch(deleteListingSuccess(res.status));\n    });\n  };\n}; */\n// for post creation\n\nexport const submitPostSuccess = post => {\n  return {\n    type: \"SUBMIT_POST_SUCCESS\",\n    payload: {\n      post\n    }\n  };\n};\n/* export const submitListing = (post) => {\n  return (dispatch) => {\n    axios.post(`/api/createListing`, { ...post }).then((res) => {\n      dispatch(submitInquirySuccess(post));\n      dispatch(loadListings());\n    });\n  };\n}; */\n\n/* export const loadListings = () => {\n  return (dispatch) => {\n    axios.get(`/api/viewListings`).then((res) => {\n      dispatch({ type: \"LOAD_LISTINGS_SUCCESS\", payload: res.data });\n    });\n  };\n}; */\n\nexport const updatePost = post => {\n  return {\n    type: \"UPDATE_POST\",\n    payload: listing\n  };\n};","map":{"version":3,"sources":["/Users/matt/Documents/CSC648/Group Project/CSC648GroupProject/front_end/momentus/src/redux/actions/postActions.js"],"names":["axios","submitCommentSuccess","comment","post","type","payload","getPostAuthor","deletePostSuccess","message","submitPostSuccess","updatePost","listing"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACrD,SAAO;AACLC,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAE;AAAEH,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,aAAa,GAAG,MAAM;AACjC,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMG,iBAAiB,GAAIC,OAAD,IAAa;AAC5C,SAAO;AACLJ,IAAAA,IAAI,EAAE,qBADD;AAELC,IAAAA,OAAO,EAAE;AAAEG,MAAAA;AAAF;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAIN,IAAD,IAAU;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAE,qBADD;AAELC,IAAAA,OAAO,EAAE;AAAEF,MAAAA;AAAF;AAFJ,GAAP;AAID,CALM;AAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMO,UAAU,GAAIP,IAAD,IAAU;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEM;AAFJ,GAAP;AAID,CALM","sourcesContent":["import axios from \"axios\";\n\n/*\nSome of these may not be needed, and some more may be needed \nThey are modified from my previous 667 project, so any terminology \ndiscrepancies are likely due to that, ask me if clarification is needed - Matt\n*/\n\n// for verifying if comment was posted\nexport const submitCommentSuccess = (comment, post) => {\n  return {\n    type: \"SUBMIT_COMMENT_SUCCESS\",\n    payload: { comment, post },\n  };\n};\n\nexport const getPostAuthor = () => {\n  return {\n    type: \"GET_POST_AUTHOR\",\n  }\n}\n\n/* needs modification to backend first before implementing these\nexport const submitComment = (comment, post) => {\n  return (dispatch) => {\n    axios\n      .post(`/api/makeInquiry?listingId=${listing.id}`, { message })\n      .then((res) => {\n        dispatch(submitInquirySuccess(message, listing));\n      });\n  };\n};\n\n\nexport const loadCommentsSuccess = (inquiries) => {\n  return {\n    type: \"LOAD_INQUIRY_SUCCESS\",\n    payload: { inquiries },\n  };\n};\nexport const loadComments = (listing) => {\n  return (dispatch) => {\n    axios.get(`/api/getInquiries?listingId=${listing.id}`).then((res) => {\n      dispatch(loadInquiriesSuccess(res.data.inquiries));\n    });\n  };\n}; */\n\n\nexport const deletePostSuccess = (message) => {\n  return {\n    type: \"DELETE_POST_SUCCESS\",\n    payload: { message },\n  };\n};\n\n// TODO: add delete functionality to backend\n/* export const deletePost = (post) => {\n  return (dispatch) => {\n    axios.get(`/api/deleteListing?id=${listing.id}`).then((res) => {\n      dispatch(deleteListingSuccess(res.status));\n    });\n  };\n}; */\n\n// for post creation\nexport const submitPostSuccess = (post) => {\n  return {\n    type: \"SUBMIT_POST_SUCCESS\",\n    payload: { post },\n  };\n};\n\n/* export const submitListing = (post) => {\n  return (dispatch) => {\n    axios.post(`/api/createListing`, { ...post }).then((res) => {\n      dispatch(submitInquirySuccess(post));\n      dispatch(loadListings());\n    });\n  };\n}; */\n\n/* export const loadListings = () => {\n  return (dispatch) => {\n    axios.get(`/api/viewListings`).then((res) => {\n      dispatch({ type: \"LOAD_LISTINGS_SUCCESS\", payload: res.data });\n    });\n  };\n}; */\n\nexport const updatePost = (post) => {\n  return {\n    type: \"UPDATE_POST\",\n    payload: listing,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}