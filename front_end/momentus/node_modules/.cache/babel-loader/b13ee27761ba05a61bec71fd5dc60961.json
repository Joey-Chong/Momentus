{"ast":null,"code":"var _jsxFileName = \"/Users/fae/Documents/GitHub/CSC648GroupProject/front_end/momentus/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, connect } from \"react-redux\";\nimport { submitComment, loadComments, deletePost } from \"../redux/actions/postActions\"; // this is to figure out who is logged in\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst select = appState => ({\n  userID: appState.postReducer.postID\n});\n/* \nPost consists of the content and user info\nWe can rearrange the stuff as needed\nTODO: add comments/likes/reposts\nTODO: add video post\n*/\n\n\nfunction Post({\n  post,\n  userID\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const isOwnPost = false;\n  const type = post.type; // check to see if post is own, adjust options accordingly\n\n  if (userID === post.userID) {\n    isOwnPost = true;\n  }\n\n  if (type == 'text') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"User-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Profilepic-post\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.pfpURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Username-post\",\n          children: [\"Posted by \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Post-date\",\n          children: [\"Posted on \", post.dateCreated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), post.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  } else if (type == 'photo') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"User-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Profilepic-post\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.pfpURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Username-post\",\n          children: [\"Posted by \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Post-date\",\n          children: [\"Posted on \", post.dateCreated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Post-photo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.contentURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Post-caption\",\n          children: post.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(Post, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Post;\nexport default connect(select)(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/fae/Documents/GitHub/CSC648GroupProject/front_end/momentus/src/components/Post.js"],"names":["React","useState","useDispatch","connect","submitComment","loadComments","deletePost","select","appState","userID","postReducer","postID","Post","post","dispatch","isOwnPost","type","pfpURL","username","dateCreated","content","contentURL","caption"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,UAHF,QAIO,8BAJP,C,CAMA;;;;AACA,MAAMC,MAAM,GAAGC,QAAQ,KAAK;AAC1BC,EAAAA,MAAM,EAAED,QAAQ,CAACE,WAAT,CAAqBC;AADH,CAAL,CAAvB;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQJ,EAAAA;AAAR,CAAd,EAAgC;AAAA;;AAC9B,QAAMK,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,SAAS,GAAG,KAAlB;AACA,QAAMC,IAAI,GAAGH,IAAI,CAACG,IAAlB,CAH8B,CAI9B;;AACA,MAAIP,MAAM,KAAKI,IAAI,CAACJ,MAApB,EAA4B;AAC1BM,IAAAA,SAAS,GAAG,IAAZ;AACD;;AACG,MAAIC,IAAI,IAAI,MAAZ,EAAoB;AAClB,wBACI;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAG,iBAAjB;AAAA,iCAAmC;AAAK,YAAA,GAAG,EAAIH,IAAI,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAG,eAAjB;AAAA,mCAA4CJ,IAAI,CAACK,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKA;AAAK,QAAA,SAAS,EAAG,cAAjB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAG,WAAjB;AAAA,mCAAwCL,IAAI,CAACM,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGN,IAAI,CAACO,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYD,GAbD,MAeK,IAAIJ,IAAI,IAAI,OAAZ,EAAqB;AACxB,wBACE;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAG,iBAAjB;AAAA,iCAAmC;AAAK,YAAA,GAAG,EAAIH,IAAI,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAG,eAAjB;AAAA,mCAA4CJ,IAAI,CAACK,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAG,cAAjB;AAAA,gCACA;AAAK,UAAA,SAAS,EAAG,WAAjB;AAAA,mCAAwCL,IAAI,CAACM,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,SAAS,EAAG,YAAjB;AAAA,iCAA8B;AAAK,YAAA,GAAG,EAAIN,IAAI,CAACQ;AAAjB;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAK,UAAA,SAAS,EAAG,cAAjB;AAAA,oBAAiCR,IAAI,CAACS;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;AAGN;;GAxCQV,I;UACUV,W;;;KADVU,I;AA2CT,eAAeT,OAAO,CAACI,MAAD,CAAP,CAAgBK,IAAhB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, connect } from \"react-redux\";\nimport {\n  submitComment,\n  loadComments,\n  deletePost,\n} from \"../redux/actions/postActions\";\n\n// this is to figure out who is logged in\nconst select = appState => ({\n  userID: appState.postReducer.postID,\n})\n\n/* \nPost consists of the content and user info\nWe can rearrange the stuff as needed\nTODO: add comments/likes/reposts\nTODO: add video post\n*/\nfunction Post({ post, userID }) {\n  const dispatch = useDispatch();\n  const isOwnPost = false;\n  const type = post.type;\n  // check to see if post is own, adjust options accordingly\n  if (userID === post.userID) {\n    isOwnPost = true;\n  }\n      if (type == 'text') {\n        return (\n            <div className = \"Post\">\n                <div className = \"User-info\">\n                  <div className = \"Profilepic-post\"><img src = {post.pfpURL}></img></div>\n                  <div className = \"Username-post\">Posted by {post.username}</div>\n                </div>\n            <div className = \"Post-content\">\n              <div className = \"Post-date\">Posted on {post.dateCreated}</div>\n              {post.content}\n            </div>\n          </div>\n        );\n      }\n\n      else if (type == 'photo') {\n        return (\n          <div className = \"Post\">\n            <div className = \"User-info\">\n              <div className = \"Profilepic-post\"><img src = {post.pfpURL}></img></div>\n              <div className = \"Username-post\">Posted by {post.username}</div>\n          </div>\n            <div className = \"Post-content\">\n            <div className = \"Post-date\">Posted on {post.dateCreated}</div>\n            <div className = \"Post-photo\"><img src = {post.contentURL}/></div>\n            <div className = \"Post-caption\">{post.caption}</div>\n      </div>\n    </div>\n        );\n      }\n   \n    \n}\n\n\nexport default connect(select)(Post);"]},"metadata":{},"sourceType":"module"}