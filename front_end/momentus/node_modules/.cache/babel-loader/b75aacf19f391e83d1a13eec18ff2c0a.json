{"ast":null,"code":"var _jsxFileName = \"/Users/fae/Documents/GitHub/CSC648GroupProject/front_end/momentus/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport '../pages/styles/post.css';\nimport { submitComment, loadComments, deletePost } from '../redux/actions/postActions'; // this is to figure out who is logged in\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst select = appState => ({\n  userID: appState.postReducer.postID\n});\n/* \nPost consists of the content and user info\nWe can rearrange the stuff as needed\nTODO: add comments/likes/reposts\nTODO: add video post\n*/\n\n\nfunction Post({\n  post,\n  userID\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const isOwnPost = false;\n  const type = post.type; // check to see if post is own, adjust options accordingly\n\n  if (userID === post.userID) {\n    isOwnPost = true;\n  }\n\n  if (type == 'text') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"User-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Profilepic-post\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.pfpURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Username-post\",\n          children: [\"Posted by \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Post-date\",\n          children: [\"Posted on \", post.dateCreated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), post.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  } else if (type == 'photo') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"User-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Profilepic-post\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.pfpURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Username-post\",\n          children: [\"Posted by \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Post-date\",\n          children: [\"Posted on \", post.dateCreated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Post-photo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.contentURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Post-caption\",\n          children: post.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Post, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Post;\nexport default connect(select)(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/fae/Documents/GitHub/CSC648GroupProject/front_end/momentus/src/components/Post.js"],"names":["React","useState","useDispatch","connect","submitComment","loadComments","deletePost","select","appState","userID","postReducer","postID","Post","post","dispatch","isOwnPost","type","pfpURL","username","dateCreated","content","contentURL","caption"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,OAArB,QAAmC,aAAnC;AACA,OAAO,0BAAP;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,UAHF,QAIO,8BAJP,C,CAMA;;;;AACA,MAAMC,MAAM,GAAGC,QAAQ,KAAK;AAC1BC,EAAAA,MAAM,EAAED,QAAQ,CAACE,WAAT,CAAqBC;AADH,CAAL,CAAvB;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,IAAT,CAAc;AAACC,EAAAA,IAAD;AAAOJ,EAAAA;AAAP,CAAd,EAA8B;AAAA;;AAC5B,QAAMK,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,SAAS,GAAG,KAAlB;AACA,QAAMC,IAAI,GAAGH,IAAI,CAACG,IAAlB,CAH4B,CAI5B;;AACA,MAAIP,MAAM,KAAKI,IAAI,CAACJ,MAApB,EAA4B;AAC1BM,IAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,MAAIC,IAAI,IAAI,MAAZ,EAAoB;AAClB,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCAAiC;AAAK,YAAA,GAAG,EAAEH,IAAI,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,mCAA0CJ,IAAI,CAACK,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,mCAAsCL,IAAI,CAACM,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGN,IAAI,CAACO,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbD,MAaO,IAAIJ,IAAI,IAAI,OAAZ,EAAqB;AAC1B,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCAAiC;AAAK,YAAA,GAAG,EAAEH,IAAI,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,mCAA0CJ,IAAI,CAACK,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,mCAAsCL,IAAI,CAACM,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCAA4B;AAAK,YAAA,GAAG,EAAEN,IAAI,CAACQ;AAAf;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBAA+BR,IAAI,CAACS;AAApC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;AACF;;GApCQV,I;UACUV,W;;;KADVU,I;AAsCT,eAAeT,OAAO,CAAEI,MAAF,CAAP,CAAkBK,IAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch, connect} from 'react-redux';\nimport '../pages/styles/post.css';\nimport {\n  submitComment,\n  loadComments,\n  deletePost,\n} from '../redux/actions/postActions';\n\n// this is to figure out who is logged in\nconst select = appState => ({\n  userID: appState.postReducer.postID,\n});\n\n/* \nPost consists of the content and user info\nWe can rearrange the stuff as needed\nTODO: add comments/likes/reposts\nTODO: add video post\n*/\nfunction Post({post, userID}) {\n  const dispatch = useDispatch ();\n  const isOwnPost = false;\n  const type = post.type;\n  // check to see if post is own, adjust options accordingly\n  if (userID === post.userID) {\n    isOwnPost = true;\n  }\n  if (type == 'text') {\n    return (\n      <div className=\"Post\">\n        <div className=\"User-info\">\n          <div className=\"Profilepic-post\"><img src={post.pfpURL} /></div>\n          <div className=\"Username-post\">Posted by {post.username}</div>\n        </div>\n        <div className=\"Post-content\">\n          <div className=\"Post-date\">Posted on {post.dateCreated}</div>\n          {post.content}\n        </div>\n      </div>\n    );\n  } else if (type == 'photo') {\n    return (\n      <div className=\"Post\">\n        <div className=\"User-info\">\n          <div className=\"Profilepic-post\"><img src={post.pfpURL} /></div>\n          <div className=\"Username-post\">Posted by {post.username}</div>\n        </div>\n        <div className=\"Post-content\">\n          <div className=\"Post-date\">Posted on {post.dateCreated}</div>\n          <div className=\"Post-photo\"><img src={post.contentURL} /></div>\n          <div className=\"Post-caption\">{post.caption}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect (select) (Post);\n"]},"metadata":{},"sourceType":"module"}